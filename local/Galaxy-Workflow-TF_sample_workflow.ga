{
    "a_galaxy_workflow": "true",
    "annotation": "",
    "format-version": "0.1",
    "name": "TF samples data july 24 2023",
    "steps": {
        "0": {
            "annotation": "",
            "content_id": "toolfactory",
            "errors": null,
            "id": 0,
            "input_connections": {},
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "toolgen",
                    "type": "input"
                },
                {
                    "name": "untested_tool",
                    "type": "tgz"
                }
            ],
            "position": {
                "left": 0,
                "top": 0
            },
            "post_job_actions": {},
            "tool_id": "toolfactory",
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"ed5a7e45a83511ed81937d0d6c34351c\", \"chromInfo\": \"/evol/galaxytf/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_options\": {\"cl_prefix\": \"\", \"cl_suffix\": \"\", \"cl_override\": \"\", \"test_override\": \"\", \"xtracond\": {\"needxtra\": \"no\", \"__current_case__\": 0, \"xtra_files\": \"\"}}, \"cl_prefix\": \"\", \"cl_suffix\": \"\", \"command_override\": \"\", \"cover\": {\"__current_case__\": 0, \"command_override\": \"\", \"commover\": \"no\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"bash\", \"dynScript\": \"echo \\\"You chose $1\\\"\"}}, \"help_text\": \"**What it Does**\", \"install\": null, \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"select_out\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": [{\"__index__\": 0, \"param_name\": \"choose\", \"ap_type\": {\"param_type\": \"selecttext\", \"__current_case__\": 4, \"selectTexts\": [{\"__index__\": 0, \"select_text\": \"one\", \"select_value\": \"won\"}, {\"__index__\": 1, \"select_text\": \"two\", \"select_value\": \"too\"}, {\"__index__\": 2, \"select_text\": \"three\", \"select_value\": \"free\"}]}, \"param_label\": \"Choose\", \"param_help\": \"\", \"param_CL\": \"1\", \"param_CLprefixed\": \"\", \"param_repeat\": false}]}}}, \"make\": {\"makeMode\": {\"__current_case__\": 2, \"citations\": [], \"galaxy_apikey\": \"fakekey\", \"galaxy_url\": \"http://localhost:8080\", \"help_text\": \"**What it Does**\\nEchos your selection\", \"make_Tool\": \"gentestinstall\", \"tool_desc\": \"ToolFactory select demonstration\", \"tool_version\": \"0.01\", \"toolshed_apikey\": \"fakekey\", \"toolshed_url\": \"http://localhost:9009\"}}, \"run_test\": \"false\", \"script_path\": \"\", \"test_override\": \"\", \"tool_desc\": \"\", \"tool_name\": \"select_test\", \"tool_version\": \"0.01\", \"useremail\": \"\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "3.0",
            "type": "tool",
            "uuid": "c013c8b0-6d58-45ba-a0d7-ea3806df079f",
            "when": null,
            "workflow_outputs": []
        },
        "1": {
            "annotation": "",
            "content_id": "toolfactory",
            "errors": null,
            "id": 1,
            "input_connections": {},
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "toolgen",
                    "type": "input"
                },
                {
                    "name": "untested_tool",
                    "type": "tgz"
                }
            ],
            "position": {
                "left": 0,
                "top": 132.5500030517578
            },
            "post_job_actions": {},
            "tool_id": "toolfactory",
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"ed5a7e45a83511ed81937d0d6c34351c\", \"chromInfo\": \"/evol/galaxytf/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_options\": {\"cl_prefix\": \"\", \"cl_suffix\": \"\", \"cl_override\": \"\", \"test_override\": \"\", \"xtracond\": {\"needxtra\": \"no\", \"__current_case__\": 0, \"xtra_files\": \"\"}}, \"cl_suffix\": \"\", \"command_override\": \"\", \"deps\": {\"packages\": \"\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"python\", \"dynScript\": \"import argparse\\nparser = argparse.ArgumentParser()\\na = parser.add_argument\\na('--repeat',default=[],action=\\\"append\\\")\\nargs = parser.parse_args()\\ns = ' and '.join(args.repeat)\\nprint(s)\\n\"}}, \"help_text\": \"**What it Does**\\n\\nShows how to allow a parameter to be repeated as often as the user wants\", \"io_param\": {\"ppass\": {\"parampass\": \"argparse\", \"__current_case__\": 0, \"io\": {\"history_inputs\": [], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"rep_out\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": [{\"__index__\": 0, \"param_name\": \"repeat\", \"ap_type\": {\"param_type\": \"text\", \"__current_case__\": 0, \"param_value\": \"Repeats of this parameter will all appear in the output\"}, \"param_label\": \"Add and edit many variations of this text field and see them in the output\", \"param_help\": \"Add and edit many variations of this text field and see them in the output\", \"param_CL\": \"\", \"param_CLprefixed\": \"\", \"param_repeat\": true}]}}}, \"script_path\": \"\", \"test_override\": \"\", \"tool_desc\": \"Repeating text field demo\", \"tool_name\": \"repeat_demo\", \"tool_version\": \"2.01\", \"useremail\": \"\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "3.0",
            "type": "tool",
            "uuid": "ba3346e4-431f-4740-aaa3-c78c622cbc4b",
            "when": null,
            "workflow_outputs": []
        },
        "2": {
            "annotation": "",
            "content_id": "toolfactory",
            "errors": null,
            "id": 2,
            "input_connections": {},
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "toolgen",
                    "type": "input"
                },
                {
                    "name": "untested_tool",
                    "type": "tgz"
                }
            ],
            "position": {
                "left": 280,
                "top": 0
            },
            "post_job_actions": {},
            "tool_id": "toolfactory",
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"ed5a7e45a83511ed81937d0d6c34351c\", \"chromInfo\": \"/evol/galaxytf/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_options\": {\"cl_prefix\": \"\", \"cl_suffix\": \"\", \"cl_override\": \"\", \"test_override\": \"\", \"xtracond\": {\"needxtra\": \"no\", \"__current_case__\": 0, \"xtra_files\": \"\"}}, \"cl_suffix\": \"\", \"command_override\": \"\", \"deps\": {\"packages\": \"\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"bash\", \"dynScript\": \"# pathetic attempt at a malicious script in Galaxy\\n# it fails because the job execution environment gives write access to few places\\necho \\\"ls -la\\\"\\nls -la\\ncd /\\necho \\\"ls -la after changing to /\\\"\\nls -la\\ntouch \\\"foo_was.here\\\"\\necho \\\"ls -la in root after touch foo_was.here - foo_was_not.here more like it\\\"\\nls -la\\n\"}}, \"help_text\": \"**What it Does**\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"evil_script_output\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"sim_size:0.05\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"script_path\": \"\", \"test_override\": \"\", \"tool_desc\": \"\", \"tool_name\": \"evil_script_that_fails\", \"tool_version\": \"0.01\", \"useremail\": \"\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "3.0",
            "type": "tool",
            "uuid": "973e6569-a89c-47ad-a8a4-9f7532cc6b82",
            "when": null,
            "workflow_outputs": []
        },
        "3": {
            "annotation": "",
            "content_id": null,
            "errors": null,
            "id": 3,
            "input_connections": {},
            "inputs": [
                {
                    "description": "",
                    "name": "phiX.fasta"
                }
            ],
            "label": "phiX.fasta",
            "name": "Input dataset",
            "outputs": [],
            "position": {
                "left": 280,
                "top": 132.5500030517578
            },
            "tool_id": null,
            "tool_state": "{\"optional\": false, \"tag\": null}",
            "tool_version": null,
            "type": "data_input",
            "uuid": "6738daf8-0b6c-42ac-b487-815048616e0f",
            "when": null,
            "workflow_outputs": []
        },
        "4": {
            "annotation": "",
            "content_id": null,
            "errors": null,
            "id": 4,
            "input_connections": {},
            "inputs": [
                {
                    "description": "",
                    "name": "hello_lisp.txt"
                }
            ],
            "label": "hello_lisp.txt",
            "name": "Input dataset",
            "outputs": [],
            "position": {
                "left": 0,
                "top": 337.01666259765625
            },
            "tool_id": null,
            "tool_state": "{\"optional\": false, \"tag\": null}",
            "tool_version": null,
            "type": "data_input",
            "uuid": "2d24f632-10f3-4e6e-9eba-936da622229b",
            "when": null,
            "workflow_outputs": []
        },
        "5": {
            "annotation": "",
            "content_id": "toolfactory",
            "errors": null,
            "id": 5,
            "input_connections": {},
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "toolgen",
                    "type": "input"
                },
                {
                    "name": "untested_tool",
                    "type": "tgz"
                }
            ],
            "position": {
                "left": 560,
                "top": 0
            },
            "post_job_actions": {},
            "tool_id": "toolfactory",
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"ed5a7e45a83511ed81937d0d6c34351c\", \"chromInfo\": \"/evol/galaxytf/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_options\": {\"cl_prefix\": \"\", \"cl_suffix\": \"\", \"cl_override\": \"\", \"test_override\": \"\", \"xtracond\": {\"needxtra\": \"no\", \"__current_case__\": 0, \"xtra_files\": \"\"}}, \"cl_suffix\": \"\", \"command_override\": \"\", \"cover\": {\"__current_case__\": 0, \"command_override\": \"\", \"commover\": \"no\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"bash\", \"dynScript\": \"echo \\\"Hello $1\\\"\"}}, \"help_text\": \"**What it Does**\", \"install\": null, \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"Hello_output\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": [{\"__index__\": 0, \"param_name\": \"say_hello_to\", \"ap_type\": {\"param_type\": \"text\", \"__current_case__\": 0, \"param_value\": \"ToolFactory\"}, \"param_label\": \"Say hello to\", \"param_help\": \"\", \"param_CL\": \"1\", \"param_CLprefixed\": \"\", \"param_repeat\": false}]}}}, \"run_test\": \"false\", \"script_path\": \"\", \"test_override\": \"\", \"tool_desc\": \"\", \"tool_name\": \"hello_toolshed\", \"tool_version\": \"0.01\", \"useremail\": \"\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "3.0",
            "type": "tool",
            "uuid": "cb3da551-bfaf-4564-a478-39c22801e75f",
            "when": null,
            "workflow_outputs": []
        },
        "6": {
            "annotation": "",
            "content_id": null,
            "errors": null,
            "id": 6,
            "input_connections": {},
            "inputs": [
                {
                    "description": "",
                    "name": "bwa-mem-mt-genome.fa"
                }
            ],
            "label": "bwa-mem-mt-genome.fa",
            "name": "Input dataset",
            "outputs": [],
            "position": {
                "left": 560,
                "top": 337.01666259765625
            },
            "tool_id": null,
            "tool_state": "{\"optional\": false, \"tag\": null}",
            "tool_version": null,
            "type": "data_input",
            "uuid": "f2c2ff26-3b02-4b38-a524-0cadbd20da75",
            "when": null,
            "workflow_outputs": []
        },
        "7": {
            "annotation": "",
            "content_id": null,
            "errors": null,
            "id": 7,
            "input_connections": {},
            "inputs": [
                {
                    "description": "",
                    "name": "bwa-mem-fastq1.fq"
                }
            ],
            "label": "bwa-mem-fastq1.fq",
            "name": "Input dataset",
            "outputs": [],
            "position": {
                "left": 560,
                "top": 460.01666259765625
            },
            "tool_id": null,
            "tool_state": "{\"optional\": false, \"tag\": null}",
            "tool_version": null,
            "type": "data_input",
            "uuid": "44f08c6a-cf87-444e-9992-6ce55f302ed2",
            "when": null,
            "workflow_outputs": []
        },
        "8": {
            "annotation": "",
            "content_id": "toolfactory",
            "errors": null,
            "id": 8,
            "input_connections": {},
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "toolgen",
                    "type": "input"
                },
                {
                    "name": "untested_tool",
                    "type": "tgz"
                }
            ],
            "position": {
                "left": 840,
                "top": 0
            },
            "post_job_actions": {},
            "tool_id": "toolfactory",
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"ed5a7e45a83511ed81937d0d6c34351c\", \"chromInfo\": \"/evol/galaxytf/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_options\": {\"cl_prefix\": \"\", \"cl_suffix\": \"\", \"cl_override\": \"\", \"test_override\": \"\", \"xtracond\": {\"needxtra\": \"no\", \"__current_case__\": 0, \"xtra_files\": \"\"}}, \"cl_suffix\": \"\", \"command_override\": \"\", \"deps\": {\"packages\": \"r-base\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"Rscript\", \"dynScript\": \"# demo\\nargs = commandArgs(trailingOnly=TRUE)\\nif (length(args)==0) {\\n   n_plots = 3\\n} else {\\n   n_plots = as.integer(args[1]) }\\ndir.create('plots')\\nfor (i in 1:n_plots) {\\n    foo = runif(100)\\n    bar = rnorm(100)\\n    bar = foo + 0.05*bar\\n    pdf(paste('plots/yet',i,\\\"anotherplot.pdf\\\",sep='_'))\\n    plot(foo,bar,main=paste(\\\"Foo by Bar plot #\\\",i),col=\\\"maroon\\\", pch=3,cex=0.6)\\n    dev.off()\\n    foo = data.frame(a=runif(100),b=runif(100),c=runif(100),d=runif(100),e=runif(100),f=runif(100))\\n    bar = as.matrix(foo)\\n    pdf(paste('plots/yet',i,\\\"anotherheatmap.pdf\\\",sep='_'))\\n    heatmap(bar,main='Random Heatmap')\\n    dev.off()\\n}\\n\"}}, \"help_text\": \"**What it Does**\\n\\nRuns R plots\\nNote the supplied test\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [], \"history_outputs\": [], \"collection_outputs\": [{\"__index__\": 0, \"name\": \"plots\", \"kind\": \"list\", \"label\": \"Plots\", \"discover\": \"__name_and_ext__\"}]}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": [{\"__index__\": 0, \"param_name\": \"nplot\", \"ap_type\": {\"param_type\": \"text\", \"__current_case__\": 0, \"param_value\": \"3\"}, \"param_label\": \"Number of random plots pairs to draw\", \"param_help\": \"\", \"param_CL\": \"1\", \"param_CLprefixed\": \"\", \"param_repeat\": false}]}}}, \"script_path\": \"\", \"test_override\": \" <tests>\\n    <test>\\n      <param name=\\\"nplot\\\" value=\\\"3\\\" />\\n      <output_collection name=\\\"plots\\\" type=\\\"list\\\">\\n     <element file=\\\"yet_1_anotherheatmap_sample.pdf\\\" name=\\\"yet_1_anotherheatmap\\\" ftype=\\\"pdf\\\" compare=\\\"sim_size\\\" delta_frac=\\\"0.05\\\"/>\\n    <\/output_collection>\\n <\/test>\\n  <\/tests>\\n\", \"tool_desc\": \"Creates some plots in R\", \"tool_name\": \"plotter\", \"tool_version\": \"0.01\", \"useremail\": \"\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "3.0",
            "type": "tool",
            "uuid": "2478e3d3-7262-4242-bb6b-24c1eae8c77e",
            "when": null,
            "workflow_outputs": []
        },
        "9": {
            "annotation": "",
            "content_id": null,
            "errors": null,
            "id": 9,
            "input_connections": {},
            "inputs": [
                {
                    "description": "",
                    "name": "hello_toolshed_toolshed_archive"
                }
            ],
            "label": "hello_toolshed_toolshed_archive",
            "name": "Input dataset",
            "outputs": [],
            "position": {
                "left": 840,
                "top": 132.5500030517578
            },
            "tool_id": null,
            "tool_state": "{\"optional\": false, \"tag\": null}",
            "tool_version": null,
            "type": "data_input",
            "uuid": "afb1afb5-60af-4b5e-b52e-9bf7d98788b4",
            "when": null,
            "workflow_outputs": []
        },
        "10": {
            "annotation": "",
            "content_id": "toolfactory",
            "errors": null,
            "id": 10,
            "input_connections": {},
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "toolgen",
                    "type": "input"
                },
                {
                    "name": "untested_tool",
                    "type": "tgz"
                }
            ],
            "position": {
                "left": 1120,
                "top": 0
            },
            "post_job_actions": {},
            "tool_id": "toolfactory",
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"ed5a7e45a83511ed81937d0d6c34351c\", \"chromInfo\": \"/evol/galaxytf/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_options\": {\"cl_prefix\": \"\", \"cl_suffix\": \"\", \"cl_override\": \"\", \"test_override\": \"\", \"xtracond\": {\"needxtra\": \"no\", \"__current_case__\": 0, \"xtra_files\": \"\"}}, \"cl_suffix\": \"\", \"command_override\": \"\", \"deps\": {\"packages\": \"swi-prolog\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"swipl -q -g main -s\", \"dynScript\": \"parent(pam,bob).\\nparent(tom,bob).\\nparent(tom,liz).\\nparent(bob,ann).\\nparent(bob,pat).\\nparent(pat,jim).\\n\\nmain :-\\n    parent(X,jim),\\n    format('~a is the parent of jim~n', [X]),\\n    halt.\\n\"}}, \"help_text\": \"**What it Does**\\n\\nProlog script demonstration in the ToolFactory\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"prolog_result\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"script_path\": \"\", \"test_override\": \"\", \"tool_desc\": \"runs a simple prolog script\", \"tool_name\": \"prolog_simple_script\", \"tool_version\": \"2.01\", \"useremail\": \"\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "3.0",
            "type": "tool",
            "uuid": "f276f7e4-8943-4412-8a78-adaf0b0e8c43",
            "when": null,
            "workflow_outputs": []
        },
        "11": {
            "annotation": "",
            "content_id": null,
            "errors": null,
            "id": 11,
            "input_connections": {},
            "inputs": [
                {
                    "description": "",
                    "name": "toolfactory.py"
                }
            ],
            "label": "toolfactory.py",
            "name": "Input dataset",
            "outputs": [],
            "position": {
                "left": 1130,
                "top": 522.0166625976562
            },
            "tool_id": null,
            "tool_state": "{\"optional\": false, \"tag\": null}",
            "tool_version": null,
            "type": "data_input",
            "uuid": "46eed2c8-e097-4a8a-a854-bd254b37cd09",
            "when": null,
            "workflow_outputs": []
        },
        "12": {
            "annotation": "",
            "content_id": "toolfactory",
            "errors": null,
            "id": 12,
            "input_connections": {},
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "toolgen",
                    "type": "input"
                },
                {
                    "name": "untested_tool",
                    "type": "tgz"
                }
            ],
            "position": {
                "left": 1400,
                "top": 0
            },
            "post_job_actions": {},
            "tool_id": "toolfactory",
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"ed5a7e45a83511ed81937d0d6c34351c\", \"chromInfo\": \"/evol/galaxytf/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_options\": {\"cl_prefix\": \"\", \"cl_suffix\": \"\", \"cl_override\": \"\", \"test_override\": \"\", \"xtracond\": {\"needxtra\": \"no\", \"__current_case__\": 0, \"xtra_files\": \"\"}}, \"cl_suffix\": \"\", \"command_override\": \"\", \"deps\": {\"packages\": \"swi-prolog\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"swipl -q -t halt -s\", \"dynScript\": \"\\n:- initialization main.\\n\\n% simple flight-planning system from http://csci.viu.ca/~wesselsd/courses/csci330/code/prolog/\\n% airport(City,Code)\\n% ------------------\\n% matches a city name with an airport code, e.g. \\\"nanaimo\\\" with \\\"ycd\\\"\\nairport('Nanaimo', 'YCD').\\nairport('Vancouver', 'YVR').\\nairport('Victoria', 'YYJ').\\nairport('Calgary', 'YYC').\\nairport('Lethbridge', 'YQL').\\nairport('Kamloops', 'YKA').\\n\\n% flight(DeptAC, ArrAC)\\n% ---------------------\\n% as a fact, states there is a direct flight between the\\n%    departure airport and arrival airport,\\n% under the given flight code (e.g. \\\"AC123\\\")\\nflight('YCD', 'YYC').\\nflight('YCD', 'YVR').\\nflight('YKA', 'YQL').\\nflight('YKA', 'YYC').\\nflight('YQL', 'YKA').\\nflight('YQL', 'YVR').\\nflight('YQL', 'YYC').\\nflight('YYJ', 'YVR').\\nflight('YYJ', 'YYC').\\nflight('YVR', 'YYC').\\nflight('YVR', 'YQL').\\nflight('YVR','YCD').\\nflight('YVR','YYJ').\\nflight('YYC', 'YQL').\\nflight('YYC', 'YKA').\\nflight('YYC','YCD').\\nflight('YYC', 'YYJ').\\nflight('YYC', 'YVR').\\n\\n    % flights(DeptAC, ArrAC)\\n    % ----------------------\\n    % as a rule, finds a sequence (list) of flights connecting\\n    %    the departure airport to the arrival airport\\n\\n    % direct flight\\n    flights(D,A) :- airport(Dname,D), airport(Aname,A),\\n        flight(D,A), format(\\\"Direct flight ~w(~w) to ~w(~w)~n\\\",[Dname,D,Aname,A]).\\n\\n    % one-stop\\n    flights1(D,A) :-\\n       flight(D,I), I \\\\= A, flight(I,A), airport(Dname,D), airport(Iname,I), airport(Aname,A),\\n       format(\\\"Flight ~w(~w) to ~w(~w) via ~w(~w)~n\\\", [Dname,D,Aname,A,Iname,I]).\\n\\n    % two-stop\\n    flights2(D,A) :-\\n       flight(D,I), I \\\\= A, flight(I,J), J \\\\= A, J \\\\= D, flight(J,A), airport(Dname,D),\\n       airport(Aname,A), airport(Iname,I), airport(Jname,J),\\n       format(\\\"Flight ~w(~w) to ~w(~w) via ~w(~w) and ~w(~w)~n\\\", [Dname,D,Aname,A,Iname,I,Jname,J]).\\n\\n    % flights(DeptCity, ArrCity)\\n    % --------------------------\\n    % run a flights query, but starting with the city name (translate to airport codes)\\n    flightsc(DC,AC) :- airport(DC,D), airport(AC,A), flights(D,A).\\n\\nmain :-\\n      flightsc('Victoria','Calgary'), flights1('YYC','YQL'), flights2('YYC','YQL').\\n\\n\"}}, \"help_text\": \"**What it Does**\\nProlog demonstration in the ToolFactory\\nMore complex example of flight routing\\n\\nProlog script demonstration in the ToolFactory\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"prolog_flight_plan\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"script_path\": \"\", \"test_override\": \"\", \"tool_desc\": \"Flight routing prolog\", \"tool_name\": \"prolog_flight_schedule_demo\", \"tool_version\": \"2.01\", \"useremail\": \"\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "3.0",
            "type": "tool",
            "uuid": "1b344301-5d76-401b-8b3d-b67b0cbfa526",
            "when": null,
            "workflow_outputs": []
        },
        "13": {
            "annotation": "",
            "content_id": "toolfactory",
            "errors": null,
            "id": 13,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 3,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "toolgen",
                    "type": "input"
                },
                {
                    "name": "untested_tool",
                    "type": "tgz"
                }
            ],
            "position": {
                "left": 560,
                "top": 132.5500030517578
            },
            "post_job_actions": {},
            "tool_id": "toolfactory",
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"ed5a7e45a83511ed81937d0d6c34351c\", \"chromInfo\": \"/evol/galaxytf/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_options\": {\"cl_prefix\": \"\", \"cl_suffix\": \"\", \"cl_override\": \"\", \"test_override\": \"\", \"xtracond\": {\"needxtra\": \"no\", \"__current_case__\": 0, \"xtra_files\": \"\"}}, \"cl_suffix\": \"\", \"command_override\": \"\", \"deps\": {\"packages\": \"perl\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"perl\", \"dynScript\": \"#!/usr/bin/perl -w\\n\\n# usage : perl toolExample.pl <FASTA file> <output file>\\n\\nopen (IN, \\\"<$ARGV[0]\\\");\\nopen (OUT, \\\">$ARGV[1]\\\");\\nwhile (<IN>) {\\n    chop;\\n    if (m/^>/) {\\n        s/^>//;\\n        if ($. > 1) {\\n            print OUT sprintf(\\\"%.3f\\\", $gc/$length) . \\\"\\\\n\\\";\\n        }\\n        $gc = 0;\\n        $length = 0;\\n    } else {\\n        ++$gc while m/[gc]/ig;\\n        $length += length $_;\\n    }\\n}\\nprint OUT sprintf(\\\"%.3f\\\", $gc/$length) . \\\"\\\\n\\\";\\nclose( IN );\\nclose( OUT );\"}}, \"help_text\": \"**What it Does**\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"fasta\"], \"input_label\": \"Input fasta for GC estimate\", \"input_help\": \"\", \"input_CL\": \"1\", \"input_repeat\": false}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"perl_gc_output\", \"history_format\": \"txt\", \"history_CL\": \"2\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"script_path\": \"\", \"test_override\": \"\", \"tool_desc\": \"\", \"tool_name\": \"perl_gc_counter\", \"tool_version\": \"0.01\", \"useremail\": \"\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "3.0",
            "type": "tool",
            "uuid": "8516338e-c219-45db-a5f7-eef53f33ba5d",
            "when": null,
            "workflow_outputs": []
        },
        "14": {
            "annotation": "",
            "content_id": "toolfactory",
            "errors": null,
            "id": 14,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 4,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "toolgen",
                    "type": "input"
                },
                {
                    "name": "untested_tool",
                    "type": "tgz"
                }
            ],
            "position": {
                "left": 280,
                "top": 337.01666259765625
            },
            "post_job_actions": {},
            "tool_id": "toolfactory",
            "tool_state": "{\"__input_ext\": \"input\", \"chromInfo\": \"/work/galaxytf/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_options\": {\"cl_prefix\": \"\", \"cl_suffix\": \"\", \"cl_override\": \"\", \"test_override\": \"\", \"xtracond\": {\"needxtra\": \"no\", \"__current_case__\": 0, \"xtra_files\": \"\"}}, \"deps\": {\"packages\": \"sbcl\", \"usescript\": {\"choosescript\": \"no\", \"__current_case__\": 0, \"dynScript\": \"\", \"scriptrunner\": \"\"}}, \"help_text\": \"**What it Does**\\nRuns the SBCL interpreter using your lisp script\\n\", \"io_param\": {\"ppass\": {\"parampass\": \"argparse\", \"__current_case__\": 0, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"txt\"], \"input_label\": \"SBCL script (lisp program)\", \"input_help\": \"Script in Lisp for the SBCL interpreter to run\", \"input_CL\": \"script\", \"input_repeat\": false}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"lisp_out\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"script_path\": \"\", \"tool_desc\": \"Lisp in the ToolFactory!\", \"tool_name\": \"lisp_toolfactory_demo\", \"tool_version\": \"2.01\", \"useremail\": \"\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "3.0",
            "type": "tool",
            "uuid": "94e8a1d0-9e1e-4df0-8ad2-4f6e3b1f52f2",
            "when": null,
            "workflow_outputs": []
        },
        "15": {
            "annotation": "",
            "content_id": "toolfactory",
            "errors": null,
            "id": 15,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 4,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "toolgen",
                    "type": "input"
                },
                {
                    "name": "untested_tool",
                    "type": "tgz"
                }
            ],
            "position": {
                "left": 280,
                "top": 522.0166625976562
            },
            "post_job_actions": {},
            "tool_id": "toolfactory",
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"ed5a7e45a83511ed81937d0d6c34351c\", \"chromInfo\": \"/evol/galaxytf/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_options\": {\"cl_prefix\": \"\", \"cl_suffix\": \"\", \"cl_override\": \"\", \"test_override\": \"\", \"xtracond\": {\"needxtra\": \"no\", \"__current_case__\": 0, \"xtra_files\": \"\"}}, \"cl_suffix\": \"\", \"command_override\": \"\", \"deps\": {\"packages\": \"sbcl\", \"usescript\": {\"choosescript\": \"no\", \"__current_case__\": 0, \"dynScript\": \"\", \"scriptrunner\": \"\"}}, \"help_text\": \"**What it Does**\\nRuns the SBCL interpreter using your lisp script\\n\", \"io_param\": {\"ppass\": {\"parampass\": \"argparse\", \"__current_case__\": 0, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"txt\"], \"input_label\": \"SBCL script (lisp program)\", \"input_help\": \"Script in Lisp for the SBCL interpreter to run\", \"input_CL\": \"script\", \"input_repeat\": false}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"lisp_out\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"script_path\": \"\", \"test_override\": \"\", \"tool_desc\": \"Lisp in the ToolFactory!\", \"tool_name\": \"lisp_toolfactory_demo\", \"tool_version\": \"2.01\", \"useremail\": \"\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "3.0",
            "type": "tool",
            "uuid": "1dead725-3e35-470b-9279-e58c74ed6ff6",
            "when": null,
            "workflow_outputs": []
        },
        "16": {
            "annotation": "",
            "content_id": "toolfactory",
            "errors": null,
            "id": 16,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 6,
                    "output_name": "output"
                },
                "io_param|ppass|io|history_inputs_1|input_files": {
                    "id": 7,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "toolgen",
                    "type": "input"
                },
                {
                    "name": "untested_tool",
                    "type": "tgz"
                }
            ],
            "position": {
                "left": 850,
                "top": 345.01666259765625
            },
            "post_job_actions": {},
            "tool_id": "toolfactory",
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"ed5a7e45a83511ed81937d0d6c34351c\", \"chromInfo\": \"/evol/galaxytf/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_options\": {\"cl_prefix\": \"\", \"cl_suffix\": \"\", \"cl_override\": \"\", \"test_override\": \"\", \"xtracond\": {\"needxtra\": \"no\", \"__current_case__\": 0, \"xtra_files\": \"\"}}, \"cl_suffix\": \"\", \"command_override\": \"\", \"deps\": {\"packages\": \"bwa=0.7.15, samtools=1.3\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"bash\", \"dynScript\": \"REFFILE=$1\\nFASTQ=$2\\nBAMOUT=$3\\nrm -f \\\"refalias\\\"\\nln -s \\\"$REFFILE\\\" \\\"refalias\\\"\\nbwa index -a is \\\"refalias\\\"\\nbwa mem -t \\\"2\\\"  -v 1 \\\"refalias\\\" \\\"$FASTQ\\\"  > tempsam\\nsamtools view -Sb tempsam > temporary_bam_file.bam\\nsamtools sort -o \\\"$BAMOUT\\\" temporary_bam_file.bam\\n\"}}, \"help_text\": \"**What it Does**\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"fasta\"], \"input_label\": \"Reference sequence to map reads against\", \"input_help\": \"\", \"input_CL\": \"1\", \"input_repeat\": false}, {\"__index__\": 1, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"fastq\"], \"input_label\": \"Reads to map\", \"input_help\": \"\", \"input_CL\": \"2\", \"input_repeat\": false}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"bwa_test_bash_output\", \"history_format\": \"bam\", \"history_CL\": \"3\", \"history_test\": \"sim_size:0.01\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"script_path\": \"\", \"test_override\": \"\", \"tool_desc\": \"\", \"tool_name\": \"bwa_test_toolfactory_positional_bash\", \"tool_version\": \"0.01\", \"useremail\": \"\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "3.0",
            "type": "tool",
            "uuid": "1698e1cd-d857-4fbd-b0b7-66993933954d",
            "when": null,
            "workflow_outputs": []
        },
        "17": {
            "annotation": "",
            "content_id": "toolfactory",
            "errors": null,
            "id": 17,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 6,
                    "output_name": "output"
                },
                "io_param|ppass|io|history_inputs_1|input_files": {
                    "id": 7,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "toolgen",
                    "type": "input"
                },
                {
                    "name": "untested_tool",
                    "type": "tgz"
                }
            ],
            "position": {
                "left": 850,
                "top": 581.0166625976562
            },
            "post_job_actions": {},
            "tool_id": "toolfactory",
            "tool_state": "{\"__input_ext\": \"input\", \"chromInfo\": \"/work/galaxytf/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_options\": {\"cl_prefix\": \"\", \"cl_suffix\": \"\", \"cl_override\": \"#set $reference_fasta_filename = \\\"localref.fa\\\"\\nln -s \\\"$ref_file\\\" \\\"$reference_fasta_filename\\\" ;\\nbwa index -a is \\\"$reference_fasta_filename\\\" ;\\nbwa mem -v 1 \\\"$reference_fasta_filename\\\" \\\"$fastq_input1\\\"  | samtools view -Sb - > temporary_bam_file.bam ;\\nsamtools sort -o \\\"$bwa_test_commover_bam_output\\\" temporary_bam_file.bam\\n\", \"test_override\": \"\", \"xtracond\": {\"needxtra\": \"no\", \"__current_case__\": 0, \"xtra_files\": \"\"}}, \"deps\": {\"packages\": \"bwa=0.7.15, samtools=1.3\", \"usescript\": {\"choosescript\": \"no\", \"__current_case__\": 0, \"dynScript\": \"\", \"scriptrunner\": \"\"}}, \"help_text\": \"**What it Does**\", \"io_param\": {\"ppass\": {\"parampass\": \"argparse\", \"__current_case__\": 0, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"fasta\"], \"input_label\": \"Reference sequence to align reads\", \"input_help\": \"\", \"input_CL\": \"ref_file\", \"input_repeat\": false}, {\"__index__\": 1, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"fastqsanger\"], \"input_label\": \"Fastqsanger file containing reads to be mapped against reference\", \"input_help\": \"\", \"input_CL\": \"fastq_input1\", \"input_repeat\": false}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"bwa_test_commover_bam_output\", \"history_format\": \"bam\", \"history_CL\": \"\", \"history_test\": \"sim_size:0.01\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"script_path\": \"\", \"tool_desc\": \"testing bwa\", \"tool_name\": \"bwa_test_command_override\", \"tool_version\": \"0.01\", \"useremail\": \"\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "3.0",
            "type": "tool",
            "uuid": "7895f8e0-5d5d-49e6-88c0-034bc84f5e22",
            "when": null,
            "workflow_outputs": []
        },
        "18": {
            "annotation": "",
            "content_id": "toolfactory",
            "errors": null,
            "id": 18,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 9,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "toolgen",
                    "type": "input"
                },
                {
                    "name": "untested_tool",
                    "type": "tgz"
                }
            ],
            "position": {
                "left": 1120,
                "top": 152.5500030517578
            },
            "post_job_actions": {},
            "tool_id": "toolfactory",
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"ed5a7e45a83511ed81937d0d6c34351c\", \"chromInfo\": \"/evol/galaxytf/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_options\": {\"cl_prefix\": \"\", \"cl_suffix\": \"\", \"cl_override\": \"\", \"test_override\": \"\", \"xtracond\": {\"needxtra\": \"no\", \"__current_case__\": 0, \"xtra_files\": \"\"}}, \"cl_suffix\": \"\", \"command_override\": \"\", \"deps\": {\"packages\": \"planemo=0.75.3\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"bash\", \"dynScript\": \"cp $1 foo.tar \\ntar -xvf foo.tar\\nTOOLNAME=`find . -name \\\"*.xml\\\"`\\necho \\\"$$$$$TOOLNAME = $TOOLNAME\\\" > $2\\nplanemo lint $TOOLNAME >> $2\"}}, \"help_text\": \"**What it Does**\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"tgz\"], \"input_label\": \"Toolshed archive to be linted\", \"input_help\": \"\", \"input_CL\": \"1\", \"input_repeat\": false}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"lint_output\", \"history_format\": \"txt\", \"history_CL\": \"2\", \"history_test\": \"diff:5\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"script_path\": \"\", \"test_override\": \"\", \"tool_desc\": \"\", \"tool_name\": \"planemo_lint\", \"tool_version\": \"0.01\", \"useremail\": \"\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "3.0",
            "type": "tool",
            "uuid": "3e85d758-fefc-47aa-b087-8d78640490ed",
            "when": null,
            "workflow_outputs": []
        },
        "19": {
            "annotation": "",
            "content_id": "toolfactory",
            "errors": null,
            "id": 19,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 11,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "toolgen",
                    "type": "input"
                },
                {
                    "name": "untested_tool",
                    "type": "tgz"
                }
            ],
            "position": {
                "left": 1410,
                "top": 337.01666259765625
            },
            "post_job_actions": {},
            "tool_id": "toolfactory",
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"ed5a7e45a83511ed81937d0d6c34351c\", \"chromInfo\": \"/evol/galaxytf/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_options\": {\"cl_prefix\": \"\", \"cl_suffix\": \"\", \"cl_override\": \"\", \"test_override\": \"\", \"xtracond\": {\"needxtra\": \"no\", \"__current_case__\": 0, \"xtra_files\": \"\"}}, \"cl_suffix\": \"\", \"command_override\": \"\", \"deps\": {\"packages\": \"\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"bash\", \"dynScript\": \"tac | rev\"}}, \"help_text\": \"**What it Does**\", \"io_param\": {\"ppass\": {\"parampass\": \"0\", \"__current_case__\": 2, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"txt\"], \"input_label\": \"Input text file to be reversed\", \"input_help\": \"\", \"input_CL\": \"STDIN\", \"input_repeat\": false}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"tacrev_reversed_output\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}}}, \"script_path\": \"\", \"test_override\": \"\", \"tool_desc\": \"\", \"tool_name\": \"tacrev\", \"tool_version\": \"0.01\", \"useremail\": \"\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "3.0",
            "type": "tool",
            "uuid": "7a433e9b-7fef-42e2-a0ec-c8c521255eea",
            "when": null,
            "workflow_outputs": []
        },
        "20": {
            "annotation": "",
            "content_id": "toolfactory",
            "errors": null,
            "id": 20,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 11,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "toolgen",
                    "type": "input"
                },
                {
                    "name": "untested_tool",
                    "type": "tgz"
                }
            ],
            "position": {
                "left": 1410,
                "top": 522.0166625976562
            },
            "post_job_actions": {},
            "tool_id": "toolfactory",
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"ed5a7e45a83511ed81937d0d6c34351c\", \"chromInfo\": \"/evol/galaxytf/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_options\": {\"cl_prefix\": \"\", \"cl_suffix\": \"\", \"cl_override\": \"\", \"test_override\": \"\", \"xtracond\": {\"needxtra\": \"no\", \"__current_case__\": 0, \"xtra_files\": \"\"}}, \"cl_suffix\": \"\", \"command_override\": \"\", \"deps\": {\"packages\": \"sed\", \"usescript\": {\"choosescript\": \"no\", \"__current_case__\": 0, \"dynScript\": \"\", \"scriptrunner\": \"\"}}, \"help_text\": \"**What it Does**\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"txt\"], \"input_label\": \"Input text to be edited\", \"input_help\": \"\", \"input_CL\": \"2\", \"input_repeat\": false}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"sedtest_edited_output\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": [{\"__index__\": 0, \"param_name\": \"sedstring\", \"ap_type\": {\"param_type\": \"text\", \"__current_case__\": 0, \"param_value\": \"s/a/Abjork!/g\"}, \"param_label\": \"sed edit string - subsitute some text for some other text globally\", \"param_help\": \"\", \"param_CL\": \"1\", \"param_CLprefixed\": \"\", \"param_repeat\": false}]}}}, \"script_path\": \"\", \"test_override\": \"\", \"tool_desc\": \"\", \"tool_name\": \"sedtest_toolshed\", \"tool_version\": \"0.01\", \"useremail\": \"\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "3.0",
            "type": "tool",
            "uuid": "2c18c81f-f3a0-4f14-9d0f-717222a15cde",
            "when": null,
            "workflow_outputs": []
        },
        "21": {
            "annotation": "",
            "content_id": "toolfactory",
            "errors": null,
            "id": 21,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 11,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "toolgen",
                    "type": "input"
                },
                {
                    "name": "untested_tool",
                    "type": "tgz"
                }
            ],
            "position": {
                "left": 1410,
                "top": 707.0166625976562
            },
            "post_job_actions": {},
            "tool_id": "toolfactory",
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"ed5a7e45a83511ed81937d0d6c34351c\", \"chromInfo\": \"/evol/galaxytf/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_options\": {\"cl_prefix\": \"\", \"cl_suffix\": \"\", \"cl_override\": \"\", \"test_override\": \"\", \"xtracond\": {\"needxtra\": \"no\", \"__current_case__\": 0, \"xtra_files\": \"\"}}, \"cl_suffix\": \"\", \"command_override\": \"\", \"deps\": {\"packages\": \"python\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"python\", \"dynScript\": \"# reverse order of text by row\\nimport argparse\\nparser = argparse.ArgumentParser()\\na = parser.add_argument\\na('--infile',default='')\\na('--pyrevargparse_outfile',default=None)\\nargs = parser.parse_args()\\ninp = args.infile\\noutp = args.pyrevargparse_outfile\\ni = open(inp,'r').readlines()\\no = open(outp,'w')\\nfor row in i:\\n  rs = row.rstrip()\\n  rs = list(rs)\\n  rs.reverse()\\n  o.write(''.join(rs))\\n  o.write('\\\\n')\\no.close()\"}}, \"help_text\": \"**What it Does**\", \"io_param\": {\"ppass\": {\"parampass\": \"argparse\", \"__current_case__\": 0, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"txt\"], \"input_label\": \"input file to be reversed\", \"input_help\": \"\", \"input_CL\": \"infile\", \"input_repeat\": false}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"pyrevargparse_outfile\", \"history_format\": \"txt\", \"history_CL\": \"pyrevargparse_outfile\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"script_path\": \"\", \"test_override\": \"\", \"tool_desc\": \"\", \"tool_name\": \"pyrev_argparse_test\", \"tool_version\": \"0.01\", \"useremail\": \"\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "3.0",
            "type": "tool",
            "uuid": "adcc49c9-00d9-422f-aee1-195169ca8ea9",
            "when": null,
            "workflow_outputs": []
        },
        "22": {
            "annotation": "",
            "content_id": "toolfactory",
            "errors": null,
            "id": 22,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 11,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "toolgen",
                    "type": "input"
                },
                {
                    "name": "untested_tool",
                    "type": "tgz"
                }
            ],
            "position": {
                "left": 1410,
                "top": 892.0166625976562
            },
            "post_job_actions": {},
            "tool_id": "toolfactory",
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"ed5a7e45a83511ed81937d0d6c34351c\", \"chromInfo\": \"/evol/galaxytf/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_options\": {\"cl_prefix\": \"\", \"cl_suffix\": \"\", \"cl_override\": \"\", \"test_override\": \"\", \"xtracond\": {\"needxtra\": \"no\", \"__current_case__\": 0, \"xtra_files\": \"\"}}, \"cl_suffix\": \"\", \"command_override\": \"\", \"deps\": {\"packages\": \"python\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"python\", \"dynScript\": \"## reverse order of text by row\\n## ToolFactory demonstration\\n## positional parameters\\nimport sys\\ninp = sys.argv[1]\\noutp = sys.argv[2]\\ni = open(inp,'r').readlines()\\no = open(outp,'w')\\nfor row in i:\\n  rs = row.rstrip()\\n  rs = list(rs)\\n  rs.reverse()\\n  o.write(''.join(rs))\\n  o.write('\\\\n')\\no.close()\"}}, \"help_text\": \"**What it Does**\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"txt\"], \"input_label\": \"Input text file to be reversed\", \"input_help\": \"\", \"input_CL\": \"1\", \"input_repeat\": false}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"pyrev_positionalparse_output\", \"history_format\": \"txt\", \"history_CL\": \"2\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"script_path\": \"\", \"test_override\": \"\", \"tool_desc\": \"\", \"tool_name\": \"pyrev_pos_test\", \"tool_version\": \"0.01\", \"useremail\": \"\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "3.0",
            "type": "tool",
            "uuid": "f181486f-e587-49c3-a25d-956d2ab43328",
            "when": null,
            "workflow_outputs": []
        }
    },
    "tags": [],
    "uuid": "00eebd5e-f187-4f15-a605-7a4eaaa3e730",
    "version": 1
}